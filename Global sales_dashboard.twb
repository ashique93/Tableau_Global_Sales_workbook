<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0916.1526                               -->
<workbook original-version='18.1' source-build='2022.2.2 (20222.22.0916.1526)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Orders+ (Multiple Connections)' inline='true' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Orders 2016' name='excel-direct.0z3l5as1t45si715gwi2w111juaj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ancna/OneDrive/Desktop/Rutgers subjects/DAV/datasets/Global Superstore Orders 2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Global Superstore Returns 2016' name='textscan.09bkf8u0vn45ct1c50g8g0xoikbo'>
            <connection class='textscan' directory='C:/Users/ancna/OneDrive/Desktop/Rutgers subjects/DAV/datasets' filename='Global Superstore Returns 2016.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0z3l5as1t45si715gwi2w111juaj' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.09bkf8u0vn45ct1c50g8g0xoikbo' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0z3l5as1t45si715gwi2w111juaj' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.09bkf8u0vn45ct1c50g8g0xoikbo' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Global Superstore Returns 2016.csv].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order ID (Global Superstore Returns 2016.csv) - Split 1' datatype='string' name='[Order ID (Global Superstore Returns 2016.csv) - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Order ID (Global Superstore Returns 2016.csv)]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Order ID (Global Superstore Returns 2016.csv)], &quot;-&quot;, 1 ) )' />
      </column>
      <column aggregation='Sum' caption='Order ID (Global Superstore Returns 2016.csv) - Split 2' datatype='integer' name='[Order ID (Global Superstore Returns 2016.csv) - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Order ID (Global Superstore Returns 2016.csv)]'>
        <calculation class='tableau' formula='INT( SPLIT( [Order ID (Global Superstore Returns 2016.csv)], &quot;-&quot;, 2 ) )' />
      </column>
      <column caption='Order ID (Global Superstore Returns 2016.csv) - Split 3' datatype='string' name='[Order ID (Global Superstore Returns 2016.csv) - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Order ID (Global Superstore Returns 2016.csv)]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Order ID (Global Superstore Returns 2016.csv)], &quot;-&quot;, 3 ) )' />
      </column>
      <column aggregation='Sum' caption='Order ID (Global Superstore Returns 2016.csv) - Split 4' datatype='integer' name='[Order ID (Global Superstore Returns 2016.csv) - Split 4]' role='dimension' type='ordinal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Order ID (Global Superstore Returns 2016.csv)]'>
        <calculation class='tableau' formula='INT( SPLIT( [Order ID (Global Superstore Returns 2016.csv)], &quot;-&quot;, 4 ) )' />
      </column>
      <column caption='Distribution Center' datatype='string' name='[Order ID - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Order ID]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Order ID], &quot;-&quot;, 1 ) )' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Small Office supplies&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Supplies&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Products'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Category:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.0z3l5as1t45si715gwi2w111juaj' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='integer' name='Postal Code' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='string' name='Country' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Market' ordinal='13' />
                    <column datatype='string' name='Product ID' ordinal='14' />
                    <column datatype='string' name='Category' ordinal='15' />
                    <column datatype='string' name='Sub-Category' ordinal='16' />
                    <column datatype='string' name='Product Name' ordinal='17' />
                    <column datatype='real' name='Sales' ordinal='18' />
                    <column datatype='integer' name='Quantity' ordinal='19' />
                    <column datatype='real' name='Discount' ordinal='20' />
                    <column datatype='real' name='Profit' ordinal='21' />
                    <column datatype='real' name='Shipping Cost' ordinal='22' />
                    <column datatype='string' name='Order Priority' ordinal='23' />
                  </columns>
                </relation>
                <relation connection='textscan.09bkf8u0vn45ct1c50g8g0xoikbo' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='string' name='Region' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' />
      </datasources>
      <datasource-dependencies datasource='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sales Dashboard' type='sheet' worksheet='Global sales and profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sales Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Croostab'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' />
          </datasources>
          <datasource-dependencies datasource='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[pcdf:sum:Quantity:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok]' ordering-field='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nw5qaa1l53pls1dclsu10n6tc08].[pcdf:sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[:Measure Names]</column>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' num-steps='6' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' />
              <text column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nw5qaa1l53pls1dclsu10n6tc08].[mn:Order Date:ok] / [federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk])</rows>
        <cols>([federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok] / [federated.1nw5qaa1l53pls1dclsu10n6tc08].[:Measure Names])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>FinalQuantity: </run>
              <run bold='true'><![CDATA[<[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Quantity:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.616667'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[mn:Order Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>6</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1264.0135135135138'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Furniture&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Quantity:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{21240B05-03ED-46EF-A1C0-EAE4A9ECA71B}' />
    </worksheet>
    <worksheet name='Customer breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' />
          </datasources>
          <datasource-dependencies datasource='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[State]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</column>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' />
              <lod column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Customer ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]</rows>
        <cols>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Shipping Cost:qk]</cols>
      </table>
      <simple-id uuid='{ADB4DDDE-D601-447B-A23B-60B29FBE559A}' />
    </worksheet>
    <worksheet name='Global sales and profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' />
              <size column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Sales:qk]' />
              <lod column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Country:nk]' />
              <lod column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Latitude (generated)]</rows>
        <cols>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{24CB1117-BBEC-4CF5-B9AC-A64AD59EA1B0}' />
    </worksheet>
    <worksheet name='Sale seasonality'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' />
          </datasources>
          <datasource-dependencies datasource='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[pcdf:sum:Quantity:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok]' ordering-field='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Quantity:qk]' value='69' />
            <format attr='width' field='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[pcdf:sum:Quantity:qk]' value='69' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok]' />
              <tooltip column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[pcdf:sum:Quantity:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk] * [federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Quantity:qk])</rows>
        <cols>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{C4C38558-B157-4B60-9651-1632767CE6AE}' />
    </worksheet>
    <worksheet name='Sales by sub category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' />
          </datasources>
          <datasource-dependencies datasource='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Small Office supplies&quot;'>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[State]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' direction='DESC' measure-to-sort-by='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Sales:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Sub-Category (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</column>
            <column>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Sales:qk]</rows>
        <cols>([federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk] / [federated.1nw5qaa1l53pls1dclsu10n6tc08].[Sub-Category (group)])</cols>
      </table>
      <simple-id uuid='{8E49209D-EEF5-4C9F-9975-268CAD7EDB8E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sales Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.1nw5qaa1l53pls1dclsu10n6tc08' />
      </datasources>
      <datasource-dependencies datasource='federated.1nw5qaa1l53pls1dclsu10n6tc08'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='14' param='vert' type-v2='layout-flow' w='99016' x='492' y='940'>
            <zone h='5875' id='15' type-v2='title' w='99016' x='492' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92245' id='7' param='horz' type-v2='layout-flow' w='99016' x='492' y='6815'>
              <zone h='92245' id='5' type-v2='layout-basic' w='89176' x='492' y='6815'>
                <zone h='46121' id='3' name='Global sales and profit' w='89176' x='492' y='6815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46124' id='10' name='Sales by sub category' w='44588' x='492' y='52936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46124' id='11' name='Customer breakdown' w='44588' x='45080' y='52936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92245' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9840' x='89668' y='6815'>
                <zone h='15041' id='8' mode='radiolist' name='Global sales and profit' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' type-v2='filter' w='9840' x='89668' y='6815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8578' id='9' name='Global sales and profit' pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' type-v2='color' w='9840' x='89668' y='21856'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10928' id='12' name='Customer breakdown' pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' type-v2='shape' w='9840' x='89668' y='30434'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='99016' x='492' y='940'>
                <zone h='5875' id='15' type-v2='title' w='99016' x='492' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15041' id='8' mode='dropdown' name='Global sales and profit' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' type-v2='filter' w='9840' x='89668' y='6815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46121' id='3' is-fixed='true' name='Global sales and profit' w='89176' x='492' y='6815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='9' name='Global sales and profit' pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' type-v2='color' w='9840' x='89668' y='21856'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46124' id='10' is-fixed='true' name='Sales by sub category' w='44588' x='492' y='52936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46124' id='11' is-fixed='true' name='Customer breakdown' w='44588' x='45080' y='52936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10928' id='12' name='Customer breakdown' pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' type-v2='shape' w='9840' x='89668' y='30434'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7D76C915-5B4B-4019-ACE4-5BE8E6B612B7}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='1' param='vert' removable='false' type-v2='layout-flow' w='99016' x='492' y='940'>
            <zone h='11868' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99016' x='492' y='940' />
            <zone h='86252' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99016' x='492' y='12808'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Overall our Profit looks strong' captured-sheet='Global sales and profit' id='1' />
                  <story-point caption='But an example of problem area is Texas' captured-sheet='Sales Dashboard' id='2'>
                    <capturedDeltas>
                      <worksheet name='Customer breakdown'>
                        <filter class='categorical' column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]'>
                          <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Global sales and profit'>
                        <filter class='categorical' column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]'>
                          <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Country:nk]</field>
                                  <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:State:nk]</field>
                                  <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]</field>
                                  <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Sales:qk]</field>
                                  <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Latitude (generated)]</field>
                                  <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;United States&quot;</value>
                                <value>&quot;Texas&quot;</value>
                                <value>-18594.832200000004</value>
                                <value>44516.001999999993</value>
                                <value>31.25</value>
                                <value>-99.25</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sales by sub category'>
                        <filter class='categorical' column='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]'>
                          <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0875BD84-A657-4E9A-8247-52D5A912DD4B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sale seasonality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[mn:Order Date:ok]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Country:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Market:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Order ID:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Segment:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FBCD2F7-F2EA-4C86-AD9E-57A13555441A}' />
    </window>
    <window class='worksheet' name='Croostab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' type='color' />
            <card param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[:Measure Names]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[mn:Order Date:ok]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB7EE574-B20B-4997-AF7F-4100CB9CA84E}' />
    </window>
    <window class='worksheet' name='Global sales and profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AAB7E018-71D8-45BC-B82E-294183C35B8B}' />
    </window>
    <window class='worksheet' name='Sales by sub category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Market:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA2FCB91-81B9-4524-A75E-C36A2A162D20}' />
    </window>
    <window class='worksheet' name='Customer breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Category:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Customer ID:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Returned:nk]</field>
            <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0A263C9-2ED0-4593-BB42-955A4D1E79E4}' />
    </window>
    <window class='dashboard' name='Sales Dashboard'>
      <viewpoints>
        <viewpoint name='Customer breakdown'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global sales and profit'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:Country:nk]</field>
                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[none:State:nk]</field>
                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Profit:qk]</field>
                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[sum:Sales:qk]</field>
                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Latitude (generated)]</field>
                    <field>[federated.1nw5qaa1l53pls1dclsu10n6tc08].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>-25729.35629999997</value>
                  <value>170188.04580000011</value>
                  <value>31.25</value>
                  <value>-99.25</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales by sub category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{6B5937AB-B238-4F4B-9055-56ACD2F77DC3}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{463120EE-FCEC-44A4-A0FA-6361E7283F2C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Croostab' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer breakdown' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global sales and profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sale seasonality' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Dashboard' width='192'>
      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
      +zFvJQzxKC3LMqqqoqpqu5OFYYjnedTrdZrNZvu+m7G6nniEjX3BdF3HcRw8z2vf12w2KZfL
      bb8wSZLwvFbcpkKhcMPoLMsyqVRqXeE1TZNsNrtu54+fbZomtm0TBAGSJBFF0S190m72jrZt
      t58J6xyKT9h6Vo/IPT09azqbYRj09/cjhKDRaGzqR42fs3rkVxSFIAiIogjLstYsZTp51uq/
      ZVluL6OC4JqvVSqVwjTNdoeuVCrtNtTrdYrF4rp16LpOs3ljtJBORnFN09A0Dd/3kSSJfD6P
      rusblluN4zjU6/U175gIwD0mXlqEYdheW0dR1B5hr1/zr+7A1y+P1lsuxc+8vuxqVtex3h4j
      Jh6ZhRDtUT0ewRVFac8qhUKBarVKKpVqzwLroaoquq6vmQUkSepo3ylJEsVikSAIUBRlU0sf
      IQS1Wq09g8T7J1mWEwG4H0iStGYt3Wg0sCyLKIrWdFhFUW4Y5Vf/+Nd37uvLr944xhvMKIqQ
      ZRnXddv3rEfc+eOymqa1lSRCiDWbal3XKRaLOI7TLnOz906n0zQajfa1eO3fCbcSltUCff31
      arXaft/Vn3d1dSV7gAeBeNmzelS7fhSPO/71/45ZvSldLQjxdU3TSKfTSJKEbdvt+9abRSRJ
      IpfL3dCZdF1vX/M8j0ql0t7Ex/uc69t1PZqmoapqu95OlmedcLPZznVdLKvZnr1Wz3iKoiQz
      wP0miqL2siDWbsQ/ZjziBUFAoVDAcRx830eWZTzPwzCMNR1pvc4cX3NddyVCd3TD57fq6Otx
      /bLJsiyEEG0V6a06tiRJZDIZoiiiXq9veh1/O8RNDcOwrcmSREhpfjIRgPuNJElks1lM06RU
      Kq35rFAo4Ps++XweWZbbHb5YLGJZFuVyGc/z2iN73DHXW9evnhnW+3x1p43X9zdjtTo13s/E
      guX7rVD419sLVhPPYMVicctmgNVtg2szaKvDX2urLMvIkkTgNsnrYSIA95u4I2maRk9PD77v
      Y1lW214Qq0tjJElqLzcURcFxHCqVSntjF3fweHmzHtcb2lZfh5auXNd1DMO4abuv11Y5joOi
      KG01YyyUN6NT7VSnxIIYBAG6rq8ZCIIgQNN0hoaGWF5eJoxChJqhEbrXnOFW63wT7h9CCCqV
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by sub category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
